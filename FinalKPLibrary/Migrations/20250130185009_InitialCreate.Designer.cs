// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalKPLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250130185009_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("FinalKPLibrary.Models.Doc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Docs");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.DocVisibilityArea", b =>
                {
                    b.Property<int>("DocId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisibilityAreaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("DocId", "VisibilityAreaId");

                    b.HasIndex("VisibilityAreaId");

                    b.ToTable("DocVisibilityAreas");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.UserVisibilityArea", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisibilityAreaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "VisibilityAreaId");

                    b.HasIndex("VisibilityAreaId");

                    b.ToTable("UserVisibilityAreas");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.VisibilityArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VisibilityAreas");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.DocVisibilityArea", b =>
                {
                    b.HasOne("FinalKPLibrary.Models.Doc", "Doc")
                        .WithMany("DocVisibilityAreas")
                        .HasForeignKey("DocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalKPLibrary.Models.VisibilityArea", "VisibilityArea")
                        .WithMany("DocVisibilityAreas")
                        .HasForeignKey("VisibilityAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doc");

                    b.Navigation("VisibilityArea");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.UserVisibilityArea", b =>
                {
                    b.HasOne("FinalKPLibrary.Models.User", "User")
                        .WithMany("UserVisibilityAreas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalKPLibrary.Models.VisibilityArea", "VisibilityArea")
                        .WithMany("UserVisibilityAreas")
                        .HasForeignKey("VisibilityAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VisibilityArea");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.Doc", b =>
                {
                    b.Navigation("DocVisibilityAreas");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.User", b =>
                {
                    b.Navigation("UserVisibilityAreas");
                });

            modelBuilder.Entity("FinalKPLibrary.Models.VisibilityArea", b =>
                {
                    b.Navigation("DocVisibilityAreas");

                    b.Navigation("UserVisibilityAreas");
                });
#pragma warning restore 612, 618
        }
    }
}
